
get:
  servers:
  - url: 'https://localhost/api/customer'

  tags:
    - CustomerAPI
  summary: Get All Customers
  description: Make a Get Request to get all Customers
  operationId: getAllCustomers
  parameters:
    - name: customer
      in: path
      description: All Customers
      required: false
      schema:
        type: string
    - name: latest
      in: query
      description: Get latest added customers
      schema:
        type: boolean
  security:
    - api_key: []
  responses:
    '200':
      description: Success
      content:
        application/json:
          schema:
            $ref: ../components/schemas/customers.yaml
          example:
            name: joe
            address: user@example.com
            number: 96171414474
            countryCode: LB
            countryName: lebanon
            operatorName: mtc

    '403':
      description: Forbidden
    '404':
      description: Customers not found
post:
  servers:
    - url: 'https://localhost/api/customer'
  tags:
    - CustomerAPI
  summary: Add Customer
  description: Add a Customer to the DB.
  operationId: addCustomer
  parameters:
    - name: customer
      in: path
      description: The customer that will be added
      required: true
      schema:
        type: string
  security:
    - api_key: []
  responses:
    '200':
      description: OK
    '400':
      description: Invalid customer supplied
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/User.yaml
    description: Updated user object
    required: true

put:
  servers:
    - url: 'https://localhost/api/customer'
  tags:
    - CustomerAPI
  summary: Update Customer
  description: Update an existing customer
  operationId: updateUser
  parameters:
    - name: customer
      in: path
      description: The Customer that will be updated
      required: true
      schema:
        type: string
  security:
    - main_auth:
        - 'write:users'
  responses:
    '200':
      description: OK
    '400':
      description: Invalid user supplied
    '404':
      description: User not found
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/User.yaml
    description: Updated user object
    required: true
delete:
  servers:
    - url: 'https://localhost/api/customer'
  tags:
    - CustomerAPI
  summary: Delete Customer
  description: Delete an existing Customer
  operationId: deleteCustomer
  parameters:
    - name: customer
      in: path
      description: The Customer that will be deleted
      required: true
      schema:
        type: string
  security:
    - api_key: []
  responses:
    '200':
      description: OK
    '400':
      description: Invalid Customer supplied
    '404':
      description: Customer not found
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/deleteResponse.yaml
    description: Updated user object
    required: true
